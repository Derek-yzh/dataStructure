## JavaScript :
    *概念:一门客户端脚本语言
        *运行在客户端浏览器中的。每-个浏览器都有JavaScript的解析引擎
        *脚本语言:不需要编译，直接就可以被浏览器解析执行了
    *功能:
        可以来增强用户和html页面的交互过程，可以来控制html元素，让页面有一些动态的效果， 增强用户的体验。
    * JaaScript发展史:
        1.1992年，Nombase公司, 开发出第-门客户端脚本语言，专门用于表单的校验。命名为: C--
        2.1995年，Netscape(网景)公司，开发了一门客户端脚本语言 : LiveScript。后来,请来SUN公司的专家，修改liveScript, 命名为JavaScript
        3.1996年， 微软抄袭JavaScript开发出JScript语言
        4.1997年，ECMA(欧洲计算机制造商协会)，ECMAScript, 就是所有客户端脚本语言的标准。

        * JavaScript = ECMAScript + JavaScript自己特有的东西(BOM+DOM)
    1. ECMAScript :客户端脚本语言的标准
        1.基本语法:
            1.与html结合方式
                1.内部JS :
                    定义<script>,标签体内容就是js代码
                2.外部JS :
                    *定义<script>, 通过src属性引入外部的js文件
                *注意:
                    1. <script>可以定义在html页面的任何地方。但是定义的位置会影响执行顺序。
                    2. <script>可以定义多个。
            2.注释:
                1.//注释内容
                2./*注释内容*/
            3.数据类型:
                1.原始数据类型(基本数据类型)：
                    1.number:整数/小数/NaN(not a number 一个不是数字的数字类型)
                    2.string:字符串 "sda" "a" "sad" 'dasf'
                    3.boolean:true/false
                    4.null:一个对象为空的占位符
                    5.undefined:未定义。如果一个变量没有给初始化值，则会被默认赋值为undefined
                2.引用数据类型:对象
            4.变量
                *变量:一小块存储数据的内存空间
                *Java语言是强类型语言，而JavaScript是 弱类型语言。
                    *强类型:在开辟变量存储空间时，定义了空间将来存储的数据的数据类型。只能存储固定类型的数据
                    *弱类型:在开辟变量存储空间时，不定义空间将来的存储数据类型，可以存放任意类型的数据。
                *语法:
                    *var 变量名 = 初始化值;
            5.运算符
                1. -元运算符:只有-个运算数的运算符
                    ++，--，
                    +(正号)
                    *++ --:自增(自减)
                        * ++(--)在前，先自增(自减)，再运算
                        * ++(--)在后，先运算，再自增(自减)
                2.算数运算符
                    + - * / %...
                3.赋值运算符
                    = += -=....
                4.比较运算符
                    > < >= <= == ===(全等于)
                5.逻辑运算符
                    && || !
                    &&| !
                        *其他类型转boolean :
                        1. number : 0或NaN为假，其他为真
                        2. string: 除了空字符串(""),其他都是true
                        3. null&undefined :都是false
                        4.对象:所有对象都为true
                6.三元运算符
                    ? : 表达式
                       vara=3;
                       varb=4;
                       var C = a>b?1:0;
                       *语法:
                       *表达式?值1:值2;
                       *判断表达式的值，如果是true则取值1,如果是false则取值2 ;
            6.流程控制语句:
                1. if.. .else...
                2. switch
                    *在java中，switch语句可以接受的数据类型: byte int shot char ,枚举(1.5) , String(1.7)
                        switch(变量):
                            case 值:
                    *在JS中，switch语句可以接受任意的原始数据类型
                3. while
                4. do.. .while
                5. for
            7. Js特殊语法:
                1.语句以;结尾，如果一行只有一条语句则;可以省略(不建议)
                2.变量的定义使用var关键字，也可以不使用
                    *用:定义的变量是局部变量
                    *不用:定义的变量是全局变量(不建议)
            8.练习:99乘法表
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <title>99乘法表</title>
                    <style>
                        td{
                            border: 1px solid;
                        }
                    </style>
                    <script>
                        document.write("<table align='center'>");
                        for(var i = 1; i <= 9; i++){
                            document.write("<tr>");
                            for(var j = 1; j <= i; j++){
                                document.write("<td>")
                                document.write(i+"*"+j+"="+(i*j)+"&nbsp&nbsp");
                                document.write("</td>")
                            }
                            document.write("</tr>");
                        }
                        document.write("</table>");
                    </script>
                </head>
                <body>
                </body>
                </html>
        2.基本对象:
            Function:函数对象
            Array
            Boolean
            Date
            Math
            Number
            String
            RegExp:正则表达式对象
                1.正则表达式:定义字符串的组成规则。
                    1.单个字符:[]
                        如:[a] [ab] [a-ZA-Z0-9_]
                        *特殊覅好代表特殊含义的单个字符：
                            \d:单个数字字符[1-9]
                            \w:单个单词字符[a-zA-Z0-9_]
                    2.量词符号:
                        *表示出现0次或多次
                        ?表示出现0次或一次
                        +表示出现一次或多次
                        {m,n}:表示m<=数量<=n
                            *m如果缺省: { ,n}:最多n次.
                            *n如果缺省: {m,}最少m次
                    3.开始结束符号
                        *A:开始
                        *$:结束
                2.正则对象:
                    1.创建:
                        1.var reg = new RegExp("正则表达式");
                        2. var reg = /正则表达式/ ;
                    2.方法
                        1.test(参数):: 验证指定的字符串是否符合正则定义的规范
            Global
                1.特点:全局对象,这个Global中封装的方法不需要对象就可以直接调用。 方法名();
                2.方法:
                    encodeURI():url编码
                    decodeURI():url解码
                    encodeURIComponent():url编码,编码的字符更多
                    decodeURIComponent():url解码

                    parseInt():将字符串转为数字
                        *逐判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number

                    isNaN() :判断一一个值是否是NaN
                        NaN六亲不认，连自己都不认。
                        NaN参与的==比较全部问false
                        所以通过此方法判断是否是NaN

    2.BOM:
        1.概念: Browser Object Model 浏览器对象模型
            *将浏览器的各个组成部分封装成对象。
        2.组成:
            *Window :窗口对象
                1.创建
                2.方法
                    1.与弹出框有关的方法:
                        alert()显示带有一段消息和一个确认按钮的警告框。
                        confirm() 显示带有一段消息以及确认按钮和取消按钮的对话框。
                            *如果用户点击确定按钮，则方法返回true
                            *如果用户点击取消按钮，则方法返回false
                        prompt()显示可提示用户输入的对话框。
                            *返回值:获取用户输入的值
                    2.与开发关闭有关的方法:
                        *close()关闭浏览器窗口，
                            *谁调用我，我关谁
                        *open()打开一个新的浏览器窗口
                            *返回新的Window对象
                    3.与定时器有关的方式
                        setTimeout()    在指定的毫秒数后调用 函数或计算表达式。
                            *参数
                                1.js代码或者方法对象
                                2.毫秒值
                            *返回值:唯一标识，用于取消计时器
                        clearTimeout()  取消由 setTimeout()方法设置的Timeout。
                        setInterval()   按照指定的周期 (以毫秒计)来调用函数或计算表达式。
                        clearInterval   ()取消由setInterval()设置的Timeout.
                3.属性
                    1.获取其他BOM对象:
                        history
                        location
                        Navigator .
                        Screen:
                    2.获取DOM对象
                        document
                4.特点
                    Window对象不需要创建可以直接使用window使用。 window.方法名();
                    window引用可以省略。方法名();
            *Navigator :浏览器对象//不太用
            *Screen :显示器屏幕对象//不太用
            *History :历史记录对象
            *Location :地址栏对象
                1.创建(获取) :
                    1. window. location
                    2. location
                2.方法:
                    *reload()重新加载当前文档。 刷新
                3.属性
                    *href设置 或返回完整的URL。
    3.DOM:
        *概念: Document object Model 文档对象模型
        *W3C DOM 标准被分为 3 个不同的部分:
            *核心 DOM -针对任何结构化文档的标准模型
                *Document:文本对象
                    Document:
                        1.创建(获取):在html dom模型中可以使用window对象来获取
                            1. window. document
                            2. document
                        2.方法:
                            1.获取Element对象:
                                1. getElementById() :根据id属性值获取元素对象。id属性值一般唯一
                                2. getElementsByTagName(): 根据元素名称获取元素对象们。返回值是一个数组
                                3. getElementsByClassName() :根据class属性值获取元素对象们。返回值是一个数组
                                4. getElementsByName(): 根据name属性值获取元素对象们。返回值是一个数组
                            2.创建其他DOM对象:
                                createAttribute(name)
                                createComment()
                                createElement( )
                                createTextNode( )
                        3.属性
                *Element :元素对象
                    1.获取/创建:通过document来获取和创建
                    2.方法:
                        1. removeAttribute() :删除属性
                        2. setAttribute() :设置属性
                *Attribute :属性对象
                *Text :文本对象
                *Comment:注释对象

                *Node :节点对象，其他5个的父对象
                    *特点:所有dom对象都可以被认为是一个节点
                    *方法:
                        * CRUD dom树:
                            *appendChild() : 向节点的子节点列表的结尾添加新的子节点。
                            *removeChild() : 删除(并返回)当前节点的指定子节点。
                            *replaceChild() :用新节点替换一个子节点。
                    *属性:
                        * parentNode 返回节点的父节点。
            *XML  DOM -针对XML文档的标准模型
            *HTML DOM -针对HTML 文档的标准模型
                1.标签体的设置和获取: innerHTML
                2.使用html元素对象的属性
                3.控制样式
        *功能:控制html文档的内容
        *代码:获取页面标签(元秦)对象Element
            *document.getElementById("id值" ) :通过元素的id获取元素对象
        *操作Element对象:
            1.设置属性值:
                1. 明确获取的对象是哪一个?
                2.查看API文档，找其中有哪些属性可以设置
            2.修改标签体内容:
                *属性: innerHTML
                1.获取元素对象
                2.使用innerHTML属性修改标签体内容
        1.事件
            *概念:某些组件被执行了某些操作后，触发某些代码的执行。
                *事件:某些操作。如:单击，双击，键盘按下了，鼠标移动了
                *事件源:组件。如:按钮文本输入框...
                *监听器:代码。
                *注册监听:将事件,事件源，监听器结合在一起。当事件源 上发生了某个事件,则触发执行某个监听器代码。
            *功能:某些组件被执行了某些操作后，触发某些代码的执行。
            *如何绑定事件:
                1.直接在html标签上,指定事件的属性(操作),属性值就是js代码
                1.事件: onclick--单击事件
                2.通过js获取元素对象，指定事件属性,设置一个函数
            *常见的事件:
                1.点击事件:
                1. onclick :单击事件
                    2. ondblclick :双击事件
                2.焦点事件
                    1. onblur :失去焦点
                        *一般用于表单验证
                    2. onfocus:元素获得焦点。
                3.加载事件:
                    1. onload :一张页面或一幅图像完成加载。
                4.鼠标事件:
                    1. onmousedown鼠标按钮被按下。
                        document.getElementById("div1").onmousedown = function (event) {
                                        //alert("鼠标按下了");
                                        alert(event.button);
                                    }
                        *event.button:左键为0中建为1右键为2
                    2. onmouseup鼠标按键被松开。
                    3. onmousemove鼠标被移动。
                    4. onmouseover鼠标移到某元秦之上。
                    5。onmouseout鼠标从某元素移开。
                5.键盘事件:
                    1. onkeydown某个键盘按键被按下。
                    2. onkeyup某个键盘按键被松开。
                    3. onkeypress某个键盘按键被按下并松开。
                6.选择和改变
                    1. onchange 域的内容被改变。
                    2. onselect 文本被选中。
                7.表单事件:
                    1. onsubmit 确认按钮被点击
                        *可以阻止表单的提交
                            *方法要返回false则表单被阻止提交
                    2. onreset 重置按钮被点击。






