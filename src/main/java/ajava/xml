##XML
    1.概念: Extensible Markup Language 可扩展标记语言
        *可扩展:标签都是自定义的。<user>    <student>
        *功能:
            *存储数据
                1.配置文件
                2.在网络中传输
        *xml与html的区别
            1. xm1标签都是自定义的，html标签是预定义。
            2. xml的语法严格，html 语法松散
            3. xml是存储数据的，html 是展示数据
    *w3c:万维网联盟
    2.语法:
        *基本语法:
            1. xm1文档的后缀名.xml
            2. xml第一行必须定义为文档声明
            3. xml文档中有且仅有一个根标签
            4.属性值必须使用引号(单双都可)引起来
            5.标签必须正确关闭
            6. xml标签名称区分大小写
        *快速入门:
            <?xml version="1.0" ?>
            <users>
                <user>
                    <name id="1">zhangsan</name>
                    <age>23</age>
                    <gender>male</gender>
                </user>

                <user>
                    <name id="2">lisi</name>
                    <age>23</age>
                    <gender>male</gender>
                </user>
            </users>
        *组成部分:
            1.文档声明
                1.格式: <?xml 属性列表?>
                2.属性列表:
                    * version :版本号,必须的属性
                    * encoding :编码方式。告知解析引擎当前文档使用的字符集，默认值: IS0-8859-1
                    * standalone :是否独立
                        *取值:
                        * yes :不依赖其他文件
                        * no:依赖其他文件
            2.指令(了解) :结合css的
                * <?xml-stylesheet type= "text/css" href="a.css" ?>
            3.标签:标签名称自定义的
                *规则:
                    *名称可以包含字母、数字以及其他的字符
                    *名称不能以数字或者标点符号开始
                    *名称不能以字母 xml (或者 XML、xml等等) 开始
                    *名称不能包含空格
            4.属性:
                id属性值唯一
            5.文本:
                *CDATA区:在该区域中的数据会被原样展示
                    *格式: <![CDATA[ 数据]]>
        *约束:规定xml文档的书写规则
            *作为框架的使用者(程序员) :
                1.能够在xm1中引入约束文档
                2.能够简单的读懂约束文档
            *分类:
                1. DTD:- 种简单的约束技术
                2. Schema:- -种复杂的约束技术
                 //https://blog.csdn.net/qq_41517071/article/details/82873237
                 //https://blog.csdn.net/xumesang/article/details/50546851
            * DTD:
                *引入dtd文档到xml文档中
                    *内部dtd :将约束规则定义在xml文档中//不常用
                    *外部dtd :将约束的规则定义在外部的dtd文件中
                        *本地: <!DOCTYPE根标签名SYSTEM"dtd文件的位置”>
                        *网络: <!DOCTYPE 根标签名PUBLIC "dtd文件名字”"dtd文件的位置URL">
            *Schema
                <?xml version="1.0"?>
                <xss:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 表示数据类型等定义来自w3
                targetNamespace="http://www.hua.com"  表示:把文档中的元素定义在"http://www.hua.com"命名空间中
                xmlns="http://www.hua.com"            表示此文档的默认命名空间是什么
                elementFormDefault="qualified">       表示要求xml文档的每一个元素都要有命名空间指定
                ……定义主体部分……
                </xss:schema>

    3.解析:操作xml文档，将文档中的数据读取到内存中
        *操作xml文档
            1.解析(读取) :将文档中的数据读取到内存中
            2.写入:将内存中的数据保存到xml文档中。持玖化的存储
        *解析xml的方式:
            1. DOM: 将标记语言文档-次性加载进内存,在内存中形成一颗dom树    //服务器
                *优点:操作方便，可以对文档进行CRUD的所有操作
                *缺点:占内存
            2. SAX :逐行读取，基于事件驱动的。   //例如安卓
                *优点:不占内存。
                *缺点:只能读取，不能增删改
        *xml常见的解析器:
            1.JAXP:sun公司提供的解析器，支持dom和s ax两种思想 //太差劲，基本不用
            2. DOM4J : 一款非常优秀的解析器
            3. Jsoup:
                    jsoup是一款Java的HTML解析器，可直接解析某个URL地址、HTML文本内容。
                它提供了一套非常省力的API,可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据.
            4. PULL : Android操作系统内置的解析器，sax方式的。

        *Jsoup:
            *快速入门:
                //1.导入jsoup包
                //2.获取Document对象,根据xml文档获取
                //2.1获取student.xml的path
                String path = jsoup_demo1.class.getClassLoader().getResource("student.xml").getPath();
                //2.2解析xml文档,加载文档进内存。获取dom树--->Document
                Document document = Jsoup.parse(new File(path), "utf-8");
                //3.获取元素对象
                Elements elements = document.getElementsByTag("name");

                System.out.println(elements.size());
                //3.1获取第一个name的Element对象
                Element element = elements.get(0);
                //3.2获取数据
                String text = element.text();
                System.out.println(text);

            *对象的使用:
                1. Jsoup :工具类，可以解析html或xml文档,返回Document
                    * parse :解析html或xml文档,返回Document
                        * parse(File in, string charsetName) :解析xml或html文件的。
                        * parse(String html) :解析xml或html字符串
                        * parse(URL url, int timeoutMillis) :通过网络路径获取指定的html或xml的文档对象
                2. Document :文档对象。代表内存中的dom树
                    *获取Element对象
                        * getElementById(string id) :根据id属性值获取唯一 的element对象
                        * getElementsByTag(String tagName) :根据标签名称获取元素对象集合
                        * getElementsByAttribute(string key) :根据属性名称获取元素对象集合
                        * getEl ementsByAttributeValue(String key, string value) :根据对应的属性名和属性值获取元素对象集合
                3. Elements :元素Element对象的集合。可以当做ArrayList<Element >来使用
                4. Element :元素对象
                    1.获取子元素对象.
                        getElementById(String id) :根据id属性值获取唯一的element对象
                        getElementsByTag(String tagName) :根据标签名称获取元素对象集合
                        getElementsByAttribute(String key) :根据属性名称获取元素对象集合
                        getElementsByAttributeValue(String key, string value) :根据对应的属性名和属性值获取元素对象集合
                    2. 获取属性值
                        * string attr(string key) :根据属性名称获取属性值
                    3.获取文本内容
                        string text(): 获取文本内容
                        string html() :获取标签体的所有内容(包括标签和字符串内容)
                5. Node: 节点对象
            *快捷查询方式:
                1. selector :选择器
                    *使用的方法: Elements select(String cssQuery)
                        *语法:参考selector类中定义的语法
                2. xPath : xPath即为XML路径语言，它是-种用来确定XML (标准通用标记语言的子集)文档中某部分位置的语蓄店
                    *使用Jsoup的Xpath需要额外导大jar包。
                    *查询w3cshool参考手册，使用xpath的语法完成查询










