##反射:框架设计的灵魂
    *框架:
        半成品软件。可以在框架的基础上进行软件开发，简化编码
    *反射:
        将类的各个组成部分封装为其他对象，这就是反射机制
    *好处:
        1.可以在程序运行过程中，操作这些对象。
        2.可以解耦，提高程序的可扩展性。
    *获取Class对象的方式:
        1. Class. forName("全类名") :将字节码文件加载进内存，返回class对象
            *多用于配置文件,将类名定义在配置文件中。读取文件，加载类
        2.类名.class :通过类名的属性class获取
            *多用于参数的传递
        3.对象.getClass() : getClass( )方法在object类中定义着
            *多用于对象的获取字节码的方式
        *结论:
            同一个字节码文件(*.class)在一次程序运行过程中，只会被加载-次, 不论通过哪一种方式获取的Class对象都是同-个。
    * Class对象功能:
        *获取功能:
            1.获取成员变量们
                * Field[] getFields()//public修饰的
                * Field getField(String name)//public
                * Field[] getDeclaredFields()//所有的
                * Field getDeclaredField(String name)//所有的(当访问私有属性时应添加name.setAccessible(true)语句)
            2.获取构造方法们
                * Constructor<?>[] getConstructors()//同上
                * Constructor<T> getConstructor(类<?>... parameterTypes )
                * Constructor<T> getDeclaredConstructor(类<?>... parameterTypes )
                * Constructor<?>[] getDeclaredConstructors()
            3.获取成员方法们:
                * Method[] getMethods()//同上
                * Method getMethod(String name, 类<?>... parameterTypes)
                * Method[] getDeclaredMethods()
                * Method getDeclaredMethod(String name, 类<?>... parameterTypes)
            4.获取类名
                *string getName( )
    *Field : 成员变量
        *操作:
            1.设置值
                *void set(object obj, object value)
            2.获取值
                *get(object obj)
            3.忽略访问权限修饰符的安全检查
                *setAccessible(ture):暴力反射
    * Constructor :构造方法
        *创建对象:
            * T newInstance(object... init args) .
            *如果使用空彭数构造方法创建对象，操作可以简化: Class对象的newInstance方法
    * Method :方法对象
        执行方法:
            object invoke(object obj, object... args)
        获取方法名称:
            * String getName: 获取方法名


